/**
 * 返回状态码
 */
declare const enum OperationResultType {

    /**
     * 输入信息验证失败
     */
    ValidError = 0,


    /**
     * 指定参数的数据不存在
     */
    QueryNull = 1,

    /**
     * 操作取消或操作没引发任何变化
     */
    NoChanged = 2,

    /**
     * 操作成功
     */
    Success = 3,

    /**
     * 操作引发错误
     */
    Error = 4,

    /**
     * 名称重复
     */
    NameRepeat = 5,

    /**
     * 登录异常
     */
    LoginError = 6,

    /**
     * 数据重复
     */
    DataRepeat = 7
}

/**
 * 配货单操作
 */
declare const enum OrderblankAction {
    /// <summary>
    /// 创建
    /// </summary>
    Create = 0,

    /// <summary>
    /// 删除
    /// </summary>
    Delete = 1,

    /// <summary>
    /// 发货
    /// </summary>
    Delivery = 2,

    /// <summary>
    /// 拒绝收货
    /// </summary>
    Reject = 3,

    /// <summary>
    /// 收货
    /// </summary>
    Accept = 4

}

/**
 * 商品活动参与用户类型(会员/非会员/所有人)
 * 
 * @enum {number}
 */
declare const enum SalesCampaignType {

    /**
     * 仅非会员
     */
    NoMemberOnly = 0,

    /**
     * 仅会员
     */
    MemberOnly = 1,

    /**
     * 所有
     */
    EveryOne = 2
}



/**
 * 折扣类型
 * 
 * @enum {number}
 */
declare const enum DiscountType {

    /**
     * 品牌折扣
     */
    BrandDiscount = 0,

    /**
     * 商品活动折扣
     */
    ProductActivityDiscount = 1
}

/**
 * 刷卡类型
 */
declare const enum SwipeCardType {
    银行卡 = 0,
    微信 = 1,
    支付宝 = 2
}

/**
 * 查询店铺列表场景
 */
declare const enum StoreQueryContext {

    NORMAL = 0,
    ORDERBLANK = 1,
    RETAIL = 2,
    RETURN = 3
}


/**
 * 零售app登录状态
 */
declare const enum ConfirmLoginStat {

    等待确认中 = 0,
    已确认 = 1,
    已拒绝 = 2
}

interface JQuery {
    multiselect(option: any);
    multiselect(selector: string, option: any);
    dataTable(option?: any);
    switcher(option: any);
    valid();
    datepicker(option: any);
    selectpicker(option?: any);
    selectpicker(method: 'val', val: number | string | Array<number> | Array<string>);
    queryAllStore(option?: any);
    queryManageStore(option?: any);

}
interface JQueryStatic {
    whiskey: any;
    retail: any;
}

/// <summary>
/// 泛型版本的业务操作结果信息类，对操作结果进行封装
/// </summary>
interface OperationResult<T> {

    /**
    * 获取或设置 操作结果类型
    */
    ResultType: OperationResultType;

    /**
     *  获取或设置 操作返回消息
     */
    Message: string;

    /**
     * 获取或设置 操作返回数据
     */
    Data: T;

}

interface FormField {
    name: string;
    value: string;
}

/**
 * 根据商品条码获取商品销售信息
 * 
 * @interface GetBarcodeRes
 */
interface GetBarcodeRes {
    Id: number;

    /**
     * 活动名称
     * 
     * @type {string}
     * @memberOf GetBarcodeRes
     */
    CampaignName: string;

    /**
     * 活动目标用户类型
     * 
     * @type {Common.SalesCampaignType}
     * @memberOf GetBarcodeRes
     */
    SalesCampaignType: SalesCampaignType

    /**
     * 会员折扣
     * 
     * @type {number}
     * @memberOf GetBarcodeRes
     */
    MemberDiscount: number;

    /**
     * 非会员折扣
     * 
     * @type {number}
     * @memberOf GetBarcodeRes
     */
    NoMmebDiscount: number;

    /**
     * 是否可以使用优惠券
     * 
     * @type {boolean}
     * @memberOf GetBarcodeRes
     */
    OtherCashCoupon: boolean;

    /**
     * 是否可以参加其他活动,例如店铺活动
     * 
     * @type {boolean}
     * @memberOf GetBarcodeRes
     */

    OtherCampaign: boolean;
}
interface CalcMoneyRes {
    /**
     * 零售价格
     * 
     * @type {number}
     * @memberOf CalcMoneyRes
     */
    RetailPrice: number;

    /**
     * 小计金额
     * 
     * @type {number}
     * @memberOf CalcMoneyRes
     */
    TotalPrice: number;

    /**
     * 商品活动折扣
     * 
     * @type {number}
     * @memberOf CalcMoneyRes
     */
    ProductActivityDiscount: number;

    /**
     * 品牌折扣
     * 
     * @type {number}
     * @memberOf CalcMoneyRes
     */
    BrandDiscount: number;

    /**
     * 折扣类型
     * 
     * @type {DiscountType}
     * @memberOf CalcMoneyRes
     */
    DiscountType: DiscountType;
}
interface ProductInfo {

    /**
     * 货号
     * 
     * @type {string}
     * @memberOf ProductInfo
     */
    ProdNum: string;

    /**
     * 数量
     * 
     * @type {number}
     * @memberOf ProductInfo
     */
    Quantity: number;

    /**
     * 活动id
     * 
     * @type {(number |)}
     * @memberOf ProductInfo
     */
    CampId: number | null;

    /**
     * 活动类型
     * 
     * @type {(SalesCampaignType |)}
     * @memberOf ProductInfo
     */
    CampType: SalesCampaignType | null;

    /**
     * 活动折扣
     * 
     * @type {(number|)}
     * @memberOf ProductInfo
     */
    CampDiscount: number | null;

    /**
     * 流水号
     * 
     * @type {string[]}
     * @memberOf ProductInfo
     */
    Barcodes: string[]
}

interface ExchangeOrderPayDto {


    NewProductInfo: ProductInfo[];

    /// <summary>
    /// 要换商品的流水号
    /// </summary>
    BarcodesToExchange: string[];
    /// <summary>
    /// 新商品的流水号
    /// </summary>
    NewProductBarcodes: string[];

    /// <summary>
    /// 零售单id
    /// </summary>
    RetailNumber: string;

    /// <summary>
    /// 原始换货商品总金额
    /// </summary>
    OriginProductTotalAmount: number;

    /// <summary>
    /// 换得商品总金额
    /// </summary>

    NewProductTotalAmount: number;

    /// <summary>
    /// 差额，换得商品与原始商品价格差
    /// </summary>

    DiffAmount: number;


    /// <summary>
    /// 现金消费
    /// </summary>
    CashConsume: number;

    /// <summary>
    /// 刷卡消费
    /// </summary>
    SwipeConsume: number;

    /// <summary>
    /// 储值消费
    /// </summary>
    StoredValueConsume: number;


    /// <summary>
    /// 积分消费
    /// </summary>
    ScoreConsume: number;


    /// <summary>
    /// 抹去
    /// </summary>
    EraseConsume: number;

    /// <summary>
    /// 找零
    /// </summary>
    ReturnMoney: number;

    /// <summary>
    /// 换货会员
    /// </summary>
    ConsumerId?: number;



    /// <summary>
    /// 换货店铺
    /// </summary>
    StoreId: number;

    /// <summary>
    /// 备注
    /// </summary>
    Note: string;

    OperatorId: number;



    /// <summary>
    /// 刷卡消费类型
    /// </summary>
    SwipeCardType: SwipeCardType;
    /// <summary>
    /// 储值返还
    /// </summary>
    ReturnStoredValue: number;

    /// <summary>
    /// 是否为补差价
    /// </summary>
    IsPay: boolean;

     /// <summary>
     /// 会员折扣
     /// </summary>
    LevelDiscount:number;
}

interface MemberValidRes {
    Id: number;
    MembNum: string;
    MemberName: string;
    RealName: string;
    Balance: number;
    Score: number;
    Collocation: any;
    Coupon: any;
    uuid: string;
    StoreId?: number;
    UniquelyIdentifies: string;
}
interface ExchangeStep2DTO {

    RetailNumber: string
    StoreId: number;
    ConsumerId?: number;
    OriginProductPrice: number;
    NewProductPrice: number;
    DiffAmount: number;
    MemberInfo: MemberValidRes;

    /// <summary>
    /// 要换商品的流水号
    /// </summary>
    BarcodesToExchange: string[];
    /// <summary>
    /// 新商品的流水号
    /// </summary>
    NewProductBarcodes: string[];

}

interface ConsumerInfoRes {
    ConsumeCoun: number,                           // 总金额
    Cash: number,                                           // 现金消费
    SwipCard: number,                                   // 刷卡消费
    CardMoney: number,                                 // 储值消费
    Score: number,                                         // 积分消费
    Erase: number,                                         // 抹去
    ReturnMoney: number,                               // 找零
    OutStoreId: number,                                 // 店铺id
    Note: string,                                           // 备注
    Operat: number,                                        // 经办人
    SwipeCardType: SwipeCardType

}



