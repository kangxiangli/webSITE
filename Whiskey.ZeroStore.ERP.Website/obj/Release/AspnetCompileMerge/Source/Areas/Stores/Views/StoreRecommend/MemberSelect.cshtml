@using Whiskey.ZeroStore.ERP.Models
<script src="~/Content/Scripts/Layer/layer.js"></script>
<style>
    .modal-content {
        width: 1000px;
        background: rgba(0,0,0,0.2);
    }
</style>
<div id="app">

    <div class="row">
        <div class="panel panel-search">
            <div class="panel-heading clearfix">
                <div class="col-md-4 panel-title">
                    <h5><i class="fa fa-search"></i> <span>查询条件</span></h5>
                </div>
                <div class="col-md-8 text-right">
                    @*<input class="switcher" type="checkbox" data-class="switcher-default" checked="checked">*@
                </div>
            </div>
            <div class="panel-body">
                <form class="form-horizontal form-search">
                    <div class="col-md-4">
                        <div class="form-group no-margin-hr">
                            <label class="control-label col-md-4">颜色</label>
                            <div class="col-md-8">
                                <select v-model="selectedColor" id="color" class="selectpicker">
                                    <option>请选择颜色</option>
                                    <option v-for="item in colors" v-bind:value="item.ColorId" >{{item.ColorName}}</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group no-margin-hr">
                            <label class="control-label col-md-4">会员名</label>
                            <div class="col-md-8">
                                <input v-on:keyup.enter="search({pageIndex:1})" class="form-control" type="text" name="name" id="name" placeholder="请输入会员名" />

                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group no-margin-hr">
                            <label class="control-label col-md-4">手机号</label>
                            <div class="col-md-8">
                                <input v-on:keyup.enter="search({pageIndex:1})" class="form-control" type="text" name="MobilePhone" id="MobilePhone" placeholder="请输入会员名" />
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="panel-footer text-right clearfix ">

                <div class="pull-left">
                    <button v-on:click="search({pageIndex:1})" title="按条件搜索数据" type="button" class="btn btn-primary btn-padding-right"><i class="fa fa-search"></i> <span>搜索</span></button>
                    <button v-on:click="document.querySelector('.form-search').reset()" title="重置搜索栏的各项输入" type="button" class="btn btn-danger btn-padding-right"><i class="fa fa-refresh"></i> <span>清除</span></button>
                </div>

                <div class="pull-right">
                    <div class="button-normal">
                        <button title="批量设置" type="button" v-bind:disabled="!isSelectColor" v-on:click="batchRecommend" class="btn btn-facebook btn-padding-right">批量推荐</button>
                        <button  title="批量设置" type="button" v-bind:disabled="!isSelectColor" v-on:click="batchRemoveRecommend" class="btn btn-danger btn-padding-right">批量不推荐</button>
                    </div>
                    <div class="button-recycle">

                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="panel panel-list">
            <div class="panel-heading clearfix">
                <div class="col-md-4 panel-title">
                    <h5><i class="fa fa-list"></i> <span>数据列表</span></h5>
                </div>
                <div class="col-md-8 text-right">
                    @*<span><input v-on:change="toggleEnable" class="enabler" type="checkbox" data-class="switcher-default" v-bind:checked="isEnabled"></span>*@
                </div>
            </div>
            <table class="table table-list table-hover valign-middle" width="100%">
                <thead>
                    <tr>
                        <th>编号</th>
                        <th>会员昵称</th>
                        <th>真实姓名</th>
                        <th>手机号</th>
                        <th>归属店铺</th>
                        <th>推荐颜色</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item,index) in pageDatas">
                        <td>{{index+1}}</td>
                        <td>{{item.MemberName}}</td>
                        <td>{{item.RealName}}</td>
                        <td>{{item.MobilePhone}}</td>
                        <td>{{item.StoreName?item.StoreName:'无'}}</td>
                        <td>{{getRecommendColor(item.Id)}}</td>
                        <td>
                            <button type="button" class="btn btn-primary" v-bind:disabled="!isSelectColor" v-if="recommendMembers.findIndex(m=>m.MemberId===item.Id)===-1" v-on:click="addMemberId(item.Id)">设置推荐</button>
                            <button type="button" class="btn btn-danger" v-bind:disabled="!isSelectColor" v-else v-on:click="removeMemberId(item.Id)">取消推荐</button>
                        </td>

                    </tr>
                </tbody>
            </table>
            <my-page v-bind:current="pageInfo.pageIndex"
                     v-bind:total="pageInfo.totalCount"
                     v-bind:page-size="pageInfo.pageSize"
                     v-bind:page-size-opts="[10,20]"
                     @@on-change="changePage"
                     @@on-page-size-change="changePageSize">
            </my-page>
        </div>
    </div>


</div>

@{
    Html.RenderPartial("Page", null);
}
<script>
    var baseUrl = '/Stores/StoreRecommend';
    var memberIds = JSON.parse('@Html.Raw(ViewBag.RecommendMemberIds)');
    var memberIdArr = memberIds.map(x => x.MemberId);
    var colors = JSON.parse('@Html.Raw(ViewBag.Colors)');
    var vmRecommendMember = new Vue({
        el: "#app",
        data: {
            bigProdNumber:'@ViewBag.BigProdNumber',
            isDeleted: false,
            isEnabled: true,
            recommendMembers: memberIds,
            numbers: [],
            pageDatas: [], //分页数据
            isLimit:@ViewBag.IsLimit,
            currentId: 0,
            pageInfo: {
                pageIndex: 1,
                pageSize: 10,
                pageCount: 0,
                totalCount: 0
            },
            checkedIds: [],
            currentId: 0,
            colors: colors,
            selectedColor:''
        },
        mounted: function () {
            $(".selectpicker").selectpicker();
            this.search();
        },
        methods: {
            getRecommendColor(memberId) {
                var index = this.recommendMembers.findIndex(x => x.MemberId == memberId);
                if ( index ===-1) {
                    return '无'
                }
                let entry = this.recommendMembers[index];
                return entry.ColorName;
            },
            search: function (filter) {

                var _self = this;

                var searchData = {

                    pageIndex: this.pageInfo.pageIndex,
                    pageSize: this.pageInfo.pageSize,

                }
                var startDate = $("#StartDate").val();
                var endDate = $("#EndDate").val();
                var name = $("#name").val();
                var mobilePhone = $("#MobilePhone").val();
                if (startDate) {
                    searchData.startDate = startDate;
                }
                if (endDate) {
                    searchData.endDate = endDate;
                }

                if (name && name.length > 0) {
                    searchData.name = name;

                }
                if (this.isLimit === 1) {
                    searchData.memberIds = memberIdArr.join(',');
                }
                if (mobilePhone && mobilePhone.length > 0) {
                    searchData.mobilePhone = mobilePhone;

                }
                if (filter) {

                    searchData = _.extend(searchData, filter)
                }

                $.getJSON(baseUrl + '/MemberList', searchData).done(function (res) {
                    if (res.ResultType !== 3) {
                        //console
                        return;
                    }
                    var pageInfo = res.Data.pageInfo;
                    var pageData = res.Data.pageData;
                    //判断是否已在列表中

                    _self.pageDatas = pageData;
                    _self.pageInfo = pageInfo;
                })
            },
            changePage: function (page) {
                this.pageInfo.pageIndex = page;
                this.search();
            },
            changePageSize: function (newSize) {

                this.pageInfo.pageSize = newSize;
                this.pageInfo.pageIndex = 1;
                this.search();
            },
            addMemberId: function (memberId) {
                var colorId = $("#color").val();
                var colorName = $("#color option:selected").text();
                
                if (this.recommendMembers.findIndex(m => m.MemberId == memberId)===-1) {
                    this.recommendMembers.push({
                        ColorId: colorId,
                        ColorName: colorName,
                        MemberId: memberId
                    });
                }
            },
            removeMemberId: function (memberId) {
                var index = this.recommendMembers.findIndex(x => x.MemberId == memberId);
                if (index !== -1) {
                    this.recommendMembers.splice(index, 1);
                }
            },
            batchRecommend: function () {
                var ids = this.pageDatas.map(i => i.Id);
                ids.forEach(id => this.addMemberId(id));

            },
            batchRemoveRecommend: function () {
                var ids = this.pageDatas.map(i => i.Id);
                ids.forEach(id => this.removeMemberId(id));
            },
            save: function () {

                var data = {
                    bigProdNumber: this.bigProdNumber,
                    recommendMembers: this.recommendMembers
                };
                $.post(baseUrl + "/SaveMemberId", data)
                    .done(function (res) {
                        console.log(res)
                        if (res.ResultType !== 3) {
                            alert(res.Message);
                            return;
                        }
                        else {

                            $("button[data-dismiss=modal]").trigger('click');
                            storeRecommendVM.search(null);
                        }
                    })
            }

        },
        computed: {
            isSelectColor: function () {
                let flag = this.selectedColor && this.selectedColor > 0;
                return flag;
            }
        }

    })
</script>