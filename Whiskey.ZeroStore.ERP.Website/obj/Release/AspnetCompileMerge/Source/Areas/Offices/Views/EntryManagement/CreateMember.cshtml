
@using Whiskey.ZeroStore.ERP.Transfers
@model MemberDto
@using Whiskey.Utility.Data
<style>
    .li_empt {
        cursor: default !important;
        background-color: transparent !important;
    }
</style>

<div class="createMember">
    <div class="panel panel-list">
        @Html.HiddenFor(x => x.ResetPass, new { @value = "000000" })
        @Html.HiddenFor(x => x.SecondReset, new { @value = "000000" })
        <div class="tab-content">
            <div class="tab-pane fade active in " id="base">

                <input type="hidden" value="/Content/Images/logo-_03.png" name="UserPhoto" />
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.MemberName) :
                    </label>
                    <div class="col-md-7 divName">
                        @Html.TextBoxFor(m => m.MemberName, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.MemberPass) :
                    </label>
                    <div class="col-md-7 divMemberPass">
                        <input type="text" id="MemberPass" class="form-control" name="MemberPass" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.SecondPass) :
                    </label>
                    <div class="col-md-7">
                        <input type="text" id="SecondPass" class="form-control" name="SecondPass" />
                    </div>
                </div>
                <div class="form-group" style="display:none">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.MemberTypeId) :
                    </label>
                    <div class="col-md-7">
                        <input type="hidden" value="1" id="MemberTypeId" name="MemberTypeId" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.Gender) :
                    </label>
                    <div class="col-md-7">
                        <select class="form-control selectpicker" id="Gender" name="Gender">
                            <option value="0">女</option>
                            <option value="1">男</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.Email) :
                    </label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.MobilePhone) :
                    </label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(m => m.MobilePhone, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.RealName) :
                    </label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(m => m.RealName, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group ">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.IDCard) :
                    </label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(m => m.IDCard, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.DateofBirth) :
                    </label>
                    <div class="col-md-7">
                        <div class="input-daterange input-group">
                            @Html.TextBox("DateofBirth", "", new { @class = "start-date input-sm form_datetime", @placeholder = "" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        @Html.DisplayNameFor(m => m.Notes) :
                    </label>
                    <div class="col-md-7">
                        @Html.TextBoxFor(m => m.Notes, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<link href="~/Content/Styles/Bootstrap/DateTimePicker/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Content/Scripts/Bootstrap/DateTimePicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Content/Scripts/Bootstrap/DateTimePicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script type="text/javascript">
    $(".form_datetime").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: false,
        minView: 2,
        todayBtn: true
    });
    $(function () {
        $(".createMember #MobilePhone").blur(function () { validatemobile($(this).val()); });
        $(".createMember #SecondPass").blur(function () {
            if ($(".createMember #SecondPass").val() !== $(".createMember #MemberPass").val()) {
                $(".createMember #SecondPass ").css({ "border": "2px solid red" }).attr("title", "两次输入密码不一致");
            } else {
                $(".createMember #SecondPass ").css({ "border": "" });
            }
        });
    });
    function validatemobile(mobile) {
        if (mobile.length == 0) {
            $(".createMember #MobilePhone ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入手机号码");
            $(".createMember #MobilePhone").focus();
            return false;
        }
        if (mobile.length != 11) {
            $(".createMember #MobilePhone ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入有效的手机号码");
            $(".createMember #MobilePhone").focus();
            return false;
        }

        var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
        if (!myreg.test(mobile)) {
            $(".createMember #MobilePhone ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入有效的手机号码");
            $("#MobilePhone").focus();
            return false;
        }
    }
    function dataValiPost() {

        var errcou = 0;
        var da = [];
        da.push({ "MemberName": $(".createMember #MemberName").val() });
        da.push({ "ResetPass": $(".createMember #ResetPass").val() });
        da.push({ "SecondReset": $(".createMember #SecondReset").val() });
        da.push({ "SecondPass": $(".createMember #SecondPass").val() });
        da.push({ "MemberTypeId": $(".createMember #MemberTypeId").val() });
        da.push({ "Gender": $(".createMember #Gender").val() });
        da.push({ "Email": $(".createMember #Email").val() });
        var MobilePhone = $(".createMember #MobilePhone").val();
        if (MobilePhone.length == 0) {
            $(".createMember #MobilePhone ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入手机号");
            errcou += 1;
        }
        else {
            $(".createMember #MobilePhone ").css({ "border": "" });
            da.push({ "MobilePhone": MobilePhone });
        }
        var MemberPass = $(".createMember #MemberPass").val();
        if (MemberPass.length == 0) {
            $(".createMember #MemberPass ").css({ "border": "2px solid red" }).attr("title", "请输入密码！");
            errcou += 1;
        }
        else {
            $(".createMember #MemberPass ").css({ "border": "" });
            da.push({ "MemberPass": MemberPass });
        }
        var SecondPass = $(".createMember #SecondPass").val();
        if (SecondPass.length == 0) {
            $(".createMember #SecondPass ").css({ "border": "2px solid red" }).attr("title", "请再次确认密码！");
            errcou += 1;
        }
        else {
            if (SecondPass !== MemberPass) {
                errcou += 1;
                $(".createMember #SecondPass ").css({ "border": "2px solid red" }).attr("title", "两次输入密码不一致");
            } else {
                $(".createMember #SecondPass ").css({ "border": "" });
                da.push({ "SecondPass": SecondPass });
            }
        }
        var RealName = $(".createMember #RealName ").val();
        if (RealName.length == 0) {
            $(".createMember #RealName ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入真实姓名");
            errcou += 1;
        }
        else {
            $(".createMember #RealName ").css({ "border": "" });
            da.push({ "RealName": RealName });
        }

        var IDCard = $(".createMember #IDCard ").val();
        if (IDCard.length == 0) {
            $(".createMember #IDCard ").css({ "border": "2px solid  #e5603b" }).attr("title", "请输入身份证号");
            errcou += 1;
        }
        else {
            $(".createMember #IDCard ").css({ "border": "" });
            da.push({ "IDCard": IDCard });
        }

        var DateofBirth = $(".createMember #DateofBirth ").val();
        da.push({ "DateofBirth": DateofBirth });
        da.push({ "IsDeleted": false });
        da.push({ "IsEnabled": true });
        if (errcou == 0) {
            return { error: 0, data: da };
        }
        else {

            return { error: 1 }
        }
    }
</script>

<script>
    // selectpicker 初始化
    $(function () {
        $('.selectpicker').selectpicker();
    })
</script>
