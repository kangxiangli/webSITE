@using Whiskey.ZeroStore.ERP.Transfers
@using Whiskey.ZeroStore.ERP.Models
@using Whiskey.Utility.Data
@model TemplateDto

@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.TemplatePath)
@Html.HiddenFor(x => x.IsDefault)
@Html.HiddenFor(x => x.TemplateNotificationId)

<div class="form-group">
    <label class="control-label col-md-3">
        模板分类：
    </label>
    <div class="col-md-8">
        @Html.TextBox("Name", Model.templateNotification != null ? Model.templateNotification.Name : string.Empty, new { @class = "form-control", @readonly = "readonly" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.TemplateName)：
    </label>
    <div class="col-md-8">
        @Html.TextBoxFor(m => m.TemplateName, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.EnabledPerNotifi)：
    </label>
    <div class="col-md-8">
        <span>
            <input type="checkbox" class="EnabledPerNotifi" @Html.Raw(Model.EnabledPerNotifi?"checked":"") data-class="switcher-default" />
            <input type="hidden" id="EnabledPerNotifi" name="EnabledPerNotifi" value="@Html.Raw(Model.EnabledPerNotifi?"true":"false")" />
        </span>
    </div>
</div>
<div class="form-group div_DepartTypeFlags" style="display:none;">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.DepartTypeFlags)：
    </label>
    <div class="col-md-8">
        @Html.DropDownList("_DepartTypeFlags", EnumHelper.GetSelectList(typeof(DepartmentTypeFlag)), new Dictionary<string, object> { { "class", "form-control selectpicker selectpickerDT" }, { "multiple", "multiple" }, { "data-live-search", "true" } })
        @Html.HiddenFor(f => f.DepartTypeFlags)
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.Notes)：
    </label>
    <div class="col-md-8">
        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.TemplateHtml) :
    </label>
    <div id="div">
        <a class="btn btn-label" role="button" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            模版文档
        </a>
        <div class="collapse" id="collapseExample">
            <div class="well">
                @Html.Raw(Model.templateNotification != null ? Model.templateNotification.Notes : string.Empty)
            </div>
        </div>
    </div>
    <div class="tab-pane fade clearfix active in">
        @Html.TextAreaFor(m => m.TemplateHtml, new { @class = "form-control", @rows = "20" })
    </div>
</div>
<script>
    $(function () {
        if ($("#EnabledPerNotifi").val() != "true") {
            $(".div_DepartTypeFlags").show();
        }

        $('.EnabledPerNotifi').switcher({
            on_state_content: "启用",
            off_state_content: "禁用"
        }).on("click", function () {
            var val = $(this).is(":checked");
            $("#EnabledPerNotifi").val("" + val + "");
            val ? $(".div_DepartTypeFlags").hide() : $(".div_DepartTypeFlags").show();
        });
    });
</script>
<script>
    // selectpicker 初始化
    $(function () {
        
        $(".selectpicker").selectpicker({ noneSelectedText: "未选择" });

        $('.selectpickerDT').on("changed.bs.select", function () {
            var curval = $(this).val();
            var strval = curval ? curval.toString() : curval;
            $("#DepartTypeFlags").val(strval);
        }).selectpicker('val', "@Model.DepartTypeFlags".split(","));
    })
</script>