
@using Whiskey.ZeroStore.ERP.Transfers
@model CompanyGoodsCategoryDto


<link href="/content/styles/jquery/jquery.zTreeStyle.css" rel="stylesheet" />
<script src="/content/scripts/jquery/jquery.ztree.core-3.5.min.js"></script>
<script src="/content/scripts/jquery/jquery.ztree.excheck-3.5.js"></script>

@Styles.Render("~/bundles/upload/styles")
@Scripts.Render("~/bundles/upload/scripts")
@Scripts.Render("~/bundles/tags")

<div class="form-group" id="div_type">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.Type) :
    </label>
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.Type, (List<SelectListItem>)ViewBag.CompanyGoodsCategoryTypeFlagList, new { @class = "form-control selectpicker" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3">
        @Html.DisplayNameFor(m => m.ParentId) :
    </label>
    <div class="col-md-6">
        <input type="text" value="" id="ParentName" readonly="readonly" disabled="disabled" />
        @Html.HiddenFor(m => m.ParentId)
    </div>
    <button id="ChooseCGCIds" style="background:#5cb85c;" title="选择类别" type="button" class="btn nav-icon-btn-success btn-padding-right" onclick="chooseCompanyGoodsCategoryIds()"><i class="fa fa-chevron-down"></i> <span>选择</span></button>
</div>
<div class="form-group">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.CompanyGoodsCategoryName) :
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.CompanyGoodsCategoryName, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.IsUniqueness) :
    </label>
    <div class="col-md-10">
        @Html.CheckBoxFor(m => m.IsUniqueness, new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" })
    </div>
</div>
<div class="form-group" id="UniqueIdentification_DIV" style="display:none">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.UniqueIdentification) :
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.UniqueIdentification, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-2">图片预览 :</label>
    <div class="col-md-10">
        <div class="upload-wrapper">
            <canvas id="upload-preview" width="470" height="250"></canvas>
        </div>
    </div>
    @Html.HiddenFor(m => m.ImgAddress)
</div>
<div class="form-group">
    <label class="control-label col-md-2"></label>
    <div class="col-md-10">
        <div class="upload-file text-left">
            <a href="javascript:void(0)" class="upload-image text-center"><label for="upload-file">上传图片</label></a>
            <input id="fileupload" type="file" accept="image/jpeg,image/gif,image/png,image/jpg">
        </div>
        <div class="upload-progress"></div>
    </div>
</div>
<div class="form-group" id="TotalQuantity_DIV" style="display:none">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.TotalQuantity) :
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.TotalQuantity, new { @class = "form-control" })
    </div>
</div>
<div class="form-group" id="Price_DIV" style="display:none">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.Price) :
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-2">
        @Html.DisplayNameFor(m => m.Notes) :
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Notes, new { @class = "form-control" })
    </div>
</div>
<script>
    $(function () {
        Uniqueness(0, 0);

        $('#fileupload').fileupload({
            url: "/Upload/UploadGoodsImg",
            dataType: 'json',
            sequentialUploads: true,
            limitConcurrentUploads: 1,
            maxNumberOfFiles: 1,
            progressInterval: 100,
            maxChunkSize: 10000,
            maxFileSize: 307200,
            formData: { ExtType: "Image", SaveDir: "Goods", FileName: $.whiskey.tools.dateFormat(new Date(), "HHmmssffff") },
            send: function (data) {
                $(".upload-file").hide();
                $(".upload-progress").show();
            },
            done: function (e, d) {
                var data = d.result;
                if (typeof (data) == "object") {
                    if (data.ResultType == 3) {
                        $(".color-details").show();
                        $("#ImgAddress").val(data.Data.file);

                        var canvas = document.getElementById('upload-preview');
                        var maxWidth = canvas.width;
                        var maxHeight = canvas.height;
                        var ctx = canvas.getContext('2d');
                        var img = new Image();
                        img.onload = function () {
                            if (img.height > maxHeight) {
                                img.width *= maxHeight / img.height;
                                img.height = maxHeight;
                            }
                            ctx.clearRect(0, 0, canvas.width, canvas.height);
                            ctx.drawImage(img, 0, 0, img.width, img.height);

                            canvas.onmouseover = function (event) {
                                canvas.style.cursor = "crosshair";
                            }
                            canvas.onmousedown = function (event) {
                                canvas.onmousemove = function (event) {
                                }
                                canvas.onmouseup = function () {

                                    canvas.style.cursor = "crosshair";

                                    var canvasOffset = $(canvas).offset();
                                    var canvasX = Math.floor(event.pageX - canvasOffset.left);
                                    var canvasY = Math.floor(event.pageY - canvasOffset.top);
                                    var imageData = ctx.getImageData(canvasX, canvasY, 1, 1);
                                    var pixel = imageData.data;

                                    canvas.onmousemove = null;
                                    canvas.onmouseup = null;
                                    canvas.onmouseover = null;
                                }
                            }
                        }
                        img.src = data.Data.file;
                    } else {
                        $.whiskey.web.alert({
                            type: "danger",
                            content: data.Message,
                            callback: function () {
                            }
                        });
                    }
                }
                $(".upload-file").show();
                $(".upload-progress").hide();
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('.upload-progress').progressbar({ value: progress });
            }
        }).prop('disabled', !$.support.fileInput)
    .parent().addClass($.support.fileInput ? undefined : 'disabled');

        var setting = {
            check: {
                enable: true,
            },
            data: {
                simpleData: {
                    enable: true,
                    idKey: "id",
                    pIdKey: "pid",
                    rootPId: null
                }
            },
            async: {
                enable: true,
                url: "/Galleries/GalleryAttribute/TreeList",
                autoParam: ["id", "name"]
            },
            callback: {
                onCheck: onTreeChecked
            }
        };

        tree = $.fn.zTree.init($(".Attributes"), setting);
        tree.setting.check.chkboxType = { "Y": "ps", "N": "ps" };
        tree.setting.view.fontCss["font-size"] = "14px";
        tree.setting.view.fontCss["line-height"] = "20px";

    });

    function ImgShow() {
        var img_show_src = $("#ImgAddress").val();
        if (img_show_src == undefined || img_show_src.length <= 0) {
            return;
        }
        $(".color-details").show();
        var canvas = document.getElementById('upload-preview');
        var maxWidth = canvas.width;
        var maxHeight = canvas.height;
        var ctx = canvas.getContext('2d');
        var img = new Image();
        img.onload = function () {
            if (img.height > maxHeight) {
                img.width *= maxHeight / img.height;
                img.height = maxHeight;
            }
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.drawImage(img, 0, 0, img.width, img.height);

            canvas.onmouseover = function (event) {
                canvas.style.cursor = "crosshair";
            }
            canvas.onmousedown = function (event) {
                canvas.onmousemove = function (event) {
                }
                canvas.onmouseup = function () {

                    canvas.style.cursor = "crosshair";

                    var canvasOffset = $(canvas).offset();
                    var canvasX = Math.floor(event.pageX - canvasOffset.left);
                    var canvasY = Math.floor(event.pageY - canvasOffset.top);
                    var imageData = ctx.getImageData(canvasX, canvasY, 1, 1);
                    var pixel = imageData.data;

                    canvas.onmousemove = null;
                    canvas.onmouseup = null;
                    canvas.onmouseover = null;
                }
            }
        }
        img.src = img_show_src;
    }

    function onTreeChecked(event, treeId, treeNode) {
        var nodes = tree.getCheckedNodes(true);
        var ids = "";
        for (var n = 0; n < nodes.length; n++) {
            ids.length == 0 ? ids = nodes[n].id : ids += "," + nodes[n].id;
        }
        $("#Attributes").val(ids);
        SetPopover(treeNode.id);
    }

    //选择类别
    function chooseCompanyGoodsCategoryIds() {
        var val = $("#Type").val();
        if (val == undefined || val == null || val == "") {
            $.whiskey.web.alert({
                type: "error",
                content: "请先选择类型",
                callback: function () {
                }
            })
            return;
        }
        var type = parseInt(val)
        $.ajax({
            url: "@Url.Action("CompanyGoodsCategory")",
            type: "get",
            data: { type: type },
            success: function (data) {
                bootbox.dialog({
                    message: data,
                    // message:formBody,
                    className: "GetCompanyGoodsCategoryList",
                    title: "类别列表",
                    buttons: {
                        cancel: {
                            label: "关闭",
                            icon: "fa-close",
                            className: "btn-default",
                            callback: function () {
                                $(".memberlist").modal("hide");
                            }
                        }
                    }
                });
            }
        });
    }

    function Uniqueness(parentId, isUniqueness) {
        if ($("#ParentId").val() == "" || $("#ParentId").val() == undefined) {
            parentId = 0;
        }

        if (parentId > 0) {
            $("#IsUniqueness").prop("disabled", "disabled");
            $("#IsUniqueness").prop("readonly", "readonly");
        } else {
            $("#IsUniqueness").removeAttr("disabled");
            $("#IsUniqueness").removeAttr("readonly");
        }

        if (isUniqueness == 1) {
            $('#IsUniqueness').prop("checked", "checked");
        } else {
            $('#IsUniqueness').removeAttr("checked");
        }

        if (parentId > 0 && isUniqueness == 1) {
            $("#UniqueIdentification_DIV").css("display", "");
            $("#TotalQuantity_DIV").css("display", "none");
            $("#Price_DIV").css("display", "");

            $("#fileupload").prop("disabled", "disabled");
            $("#fileupload").prop("readonly", "readonly");
            ImgShow();
        } else if (parentId > 0 && isUniqueness == 0) {
            $("#UniqueIdentification_DIV").css("display", "none");
            $("#TotalQuantity_DIV").css("display", "");
            $("#Price_DIV").css("display", "");

            $("#fileupload").removeAttr("disabled");
            $("#fileupload").removeAttr("readonly");
        }
        else {
            $("#UniqueIdentification_DIV").css("display", "none");
            $("#TotalQuantity_DIV").css("display", "none");
            $("#Price_DIV").css("display", "none");

            $("#fileupload").removeAttr("disabled");
            $("#fileupload").removeAttr("readonly");
        }
    }
</script>
<script>
    // selectpicker 初始化
    $(function () {
        $('.selectpicker').selectpicker();
        $('.selectpicker').selectpicker('refresh');
    })
</script>
