
//   This file was generated by T4 code generator Contract_Creater.tt.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Web;
using AutoMapper;
using Whiskey.Core;
using Whiskey.Core.Data;
using Whiskey.Web.Helper;
using Whiskey.Web.SignalR;
using Whiskey.Web.Extensions;
using Whiskey.Utility;
using Whiskey.Utility.Data;
using Whiskey.Utility.Web;
using Whiskey.Utility.Class;
using Whiskey.Utility.Extensions;
using Whiskey.ZeroStore.ERP.Transfers;
using Whiskey.ZeroStore.ERP.Models;
using Whiskey.ZeroStore.ERP.Services.Contracts;
using System.Web.Mvc;
using Whiskey.ZeroStore.ERP.Transfers.Enum.Authority;
using Whiskey.ZeroStore.ERP.Services.Content;

namespace Whiskey.ZeroStore.ERP.Services.Contracts
{
    /// <summary>
    /// 服务合约
    /// </summary>
    public interface IAdministratorContract : IDependency
    {
        #region Administrator

        Administrator View(int Id);

        AdministratorDto Edit(int Id);

        IQueryable<Administrator> Administrators { get; }

        OperationResult Insert(params AdministratorDto[] dtos);
        OperationResult Insert(params Administrator[] admins);

        OperationResult Update(params AdministratorDto[] dtos);
        OperationResult Update(params Administrator[] admin);
        OperationResult Remove(params int[] ids);

        OperationResult Recovery(params int[] ids);

        OperationResult Delete(params int[] ids);

        OperationResult Enable(params int[] ids);

        OperationResult Disable(params int[] ids);

        bool CheckNameExist(string AdminName);

        OperationResult CheckLogin(Administrator dto);

        OperationResult FindPassword(Administrator dto);

        bool CheckExists(Expression<Func<Administrator, bool>> predicate, int id = 0);

        List<SelectListItem> SelectList(string title);

        OperationResult Update(int AdminId, string KeyWord, AdminUpdateFlag flag);

        OperationResult UpdatePass(int AdminId, string OldPass, string PassWord);

        OperationResult GetWorkTime(int adminId);

        #endregion



        int GetMemberId(int adminId);


        /// <summary>
        /// 获取管理员的会员信息
        /// </summary>
        /// <param name="adminId"></param>
        /// <returns></returns>
        OperationResult GetMemberProfile(int adminId);

        /// <summary>
        /// 判断员工是否是设计师
        /// </summary>
        /// <param name="AdminId"></param>
        /// <returns></returns>
        bool IsDesigner(int AdminId);
        /// <summary>
        /// 如何员工是设计师获取所属店铺和仓库
        /// </summary>
        /// <param name="AdminId"></param>
        /// <returns>返回值第一个参数为True时是设计师,可取第二个参数</returns>
        Tuple<bool, List<StoreSelectItem>> GetDesignerStoreStorage(int AdminId);

        /// <summary>
        /// 如何员工是设计师获取所属店铺和仓库
        /// </summary>
        /// <param name="AdminId"></param>
        /// <returns>返回值第一个参数为True时是设计师,可取后二个参数[第一个为店铺,第二个为仓库],设计师所属店铺和仓库只有一个</returns>
        Tuple<bool, List<SelectListItem>,List<SelectListItem>> GetDesignerStoreStorageList(int AdminId);
        /// <summary>
        /// 发送员工生日通知
        /// </summary>
        /// <param name="AdminId"></param>
        void SendAdminBirthdayNoti(int AdminId);

    }
}
