
//   This file was generated by T4 code generator Contract_Creater.tt.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Web;
using AutoMapper;
using Whiskey.Core;
using Whiskey.Core.Data;
using Whiskey.Web.Helper;
using Whiskey.Web.SignalR;
using Whiskey.Web.Extensions;
using Whiskey.Utility;
using Whiskey.Utility.Data;
using Whiskey.Utility.Web;
using Whiskey.Utility.Class;
using Whiskey.Utility.Extensions;
using Whiskey.ZeroStore.ERP.Transfers;
using Whiskey.ZeroStore.ERP.Models;
using Whiskey.ZeroStore.ERP.Services.Contracts;
using System.Web.Mvc;
using Whiskey.ZeroStore.ERP.Models.DTO;

namespace Whiskey.ZeroStore.ERP.Services.Contracts
{
    /// <summary>
    /// 服务合约
    /// </summary>
    public interface IStoreContract : IDependency
    {
        #region Store

        Store View(int Id);

        StoreDto Edit(int Id);

        IQueryable<Store> Stores { get; }

        IQueryable<OpenCloseRecord> OpenCloseRecords { get; }

        OperationResult Insert(params StoreDto[] dtos);

        OperationResult Update(params StoreDto[] dtos);

        OperationResult Remove(params int[] ids);

        OperationResult Recovery(params int[] ids);

        OperationResult Delete(params int[] ids);

        OperationResult Enable(params int[] ids);

        OperationResult Disable(params int[] ids);

        bool CheckExists(Expression<Func<Store, bool>> predicate, int id = 0);

        /// <summary>
        /// 是否正在盘点
        /// </summary>
        bool IsInCheckingStat(int storeId);
        bool IsInOrderblankingStat(int storeId);

        bool IsInClosedStat(int storeId);

        List<int> GetStoresInChecking();
        List<int> GetStoresInOrderblanking();
        List<int> GetStoresClosed();
        


        /// <summary>
        /// 过滤不在权限范围内的storeId
        /// </summary>
        List<int> FilterStoreId(int? userId, IAdministratorContract _adminContract, int? storeIdToCheck);

        /// <summary>
        /// 闭店操作
        /// </summary>
        /// <param name="storeId"></param>
        /// <returns></returns>
        OperationResult CloseStore(int storeId);

        /// <summary>
        /// 开店操作
        /// </summary>
        /// <param name="storeId"></param>
        /// <returns></returns>
        OperationResult OpenStore(params int[] storeId);




        List<StoreCacheEntry> QueryAllStore();

        List<StorageCacheEntry> QueryAllStorage();

        List<int> QueryManageStoreId(int adminId);

        List<int> QueryManageStorageId(int adminId);


        List<StoreCacheEntry> QueryManageStore(int adminId);

        List<StorageCacheEntry> QueryManageStorage(int adminId);

        /// <summary>
        /// 获取权限下的部门id
        /// </summary>
        /// <param name="adminId"></param>
        /// <param name="includeSelfDepartment">是否包含自己的部门</param>
        /// <returns></returns>
        List<int> QueryManageDepartmentId(int adminId, bool includeSelfDepartment = true);



        void CheckStoreId(int storeId, int adminId);
        

        #endregion

    }
}
