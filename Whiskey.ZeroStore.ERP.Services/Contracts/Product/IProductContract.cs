
//   This file was generated by T4 code generator Contract_Creater.tt.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Web;
using AutoMapper;
using Whiskey.Core;
using Whiskey.Core.Data;
using Whiskey.Web.Helper;
using Whiskey.Web.SignalR;
using Whiskey.Web.Extensions;
using Whiskey.Utility;
using Whiskey.Utility.Data;
using Whiskey.Utility.Web;
using Whiskey.Utility.Class;
using Whiskey.Utility.Extensions;
using Whiskey.ZeroStore.ERP.Transfers;
using Whiskey.ZeroStore.ERP.Models;
using Whiskey.ZeroStore.ERP.Services.Contracts;
using Whiskey.ZeroStore.ERP.Transfers.APIEntities.Factory;

namespace Whiskey.ZeroStore.ERP.Services.Contracts
{
    /// <summary>
    /// 服务合约
    /// </summary>
    public interface IProductContract : IDependency
    {
        #region Product

        Product View(int Id);

        ProductDto Edit(int Id);

        IQueryable<Product> Products { get; }

        OperationResult Insert(params ProductDto[] dtos);

        OperationResult Update(Product[] Products, bool istrans = false, string optionDescr = null);
        OperationResult Update(params ProductDto[] dtos);
        OperationResult UpdatePriceByDiscount(ProductDiscount discount, int[] productIds, bool isTrans);

        OperationResult PrintProductCode(params Product[] products);

        OperationResult Remove(params int[] ids);

        OperationResult Recovery(params int[] ids);

        OperationResult Delete(params int[] ids);

        OperationResult Enable(params int[] ids);

        OperationResult Disable(params int[] ids);

        //string GetProductNumber(ProductDto dto);

        OperationResult Verify(params int[] ids);

        OperationResult Reject(params int[] ids);
        /// <summary>
        /// 样品发布
        /// </summary>
        /// <param name="ids"></param>
        /// <returns></returns>
        OperationResult Publish(params int[] ids);

        bool CheckExists(Expression<Func<Product, bool>> predicate, int id = 0);

        List<Values<string, string>> Selectlist(string title, Expression<Func<Product, bool>> exp);

        #endregion

        void Update(IQueryable<Product> products);

        ProductDto GetProductByNumber(string IdOrNum);

        OperationResult GetProductColorSize(string bigProdNum);

        OperationResult Rename(int PageIndex, int PageSize);

        /// <summary>
        /// 获取商城搭配素材(API用)
        /// </summary>
        /// <param name="PageIndex">页码</param>
        /// <param name="PageSize">分页大小</param>
        /// <returns></returns>
        List<ColloProductInfo> GetStoreCollocationMaterials(int PageIndex = 1, int PageSize = 10);

    }
}
