
//   This file was generated by T4 code generator Contract_Creater.tt.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Web;
using AutoMapper;
using Whiskey.Core;
using Whiskey.Core.Data;
using Whiskey.Web.Helper;
using Whiskey.Web.SignalR;
using Whiskey.Web.Extensions;
using Whiskey.Utility;
using Whiskey.Utility.Data;
using Whiskey.Utility.Web;
using Whiskey.Utility.Class;
using Whiskey.Utility.Extensions;
using Whiskey.ZeroStore.ERP.Transfers;
using Whiskey.ZeroStore.ERP.Models;
using Whiskey.ZeroStore.ERP.Services.Contracts;
using System.Data.Entity;

namespace Whiskey.ZeroStore.ERP.Services.Contracts
{
    /// <summary>
    /// 服务合约
    /// </summary>
    public interface ICheckerContract : IDependency
    {
        #region Checker

		Checker View(int Id);

		CheckerDto Edit(int Id);

        IQueryable<Checker> Checkers { get; }

		OperationResult Insert(params CheckerDto[] dtos);
        OperationResult Insert(Checker[] ches);

		OperationResult Update(params CheckerDto[] dtos);

		OperationResult Remove(params int[] ids);

        OperationResult Remove(params string[] CheckGuids);

		OperationResult Recovery(params int[] ids);

        OperationResult Delete(params int[] ids);

		OperationResult Enable(params int[] ids);

		OperationResult Disable(params int[] ids);

        bool CheckExists(Expression<Func<Checker, bool>> predicate, int id = 0);

        OperationResult Confirm(int Id);

        OperationResult CheckerOk(int Id, int? adminId);

        OperationResult IsIndex(string CheckerUid);

        OperationResult CheckerOver(string CheckNumber);
        #endregion


        DbContextTransaction GetTransaction();







    }
}
